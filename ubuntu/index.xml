<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ubuntus on polariseye</title>
    <link>https://polariseye.github.io/ubuntu/</link>
    <description>Recent content in Ubuntus on polariseye</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 12 Aug 2017 12:31:55 +0000</lastBuildDate>
    
	<atom:link href="https://polariseye.github.io/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vim多文件多窗口操作</title>
      <link>https://polariseye.github.io/ubuntu/vim_window/</link>
      <pubDate>Sat, 12 Aug 2017 12:31:55 +0000</pubDate>
      
      <guid>https://polariseye.github.io/ubuntu/vim_window/</guid>
      <description>vim多文件多窗口操作 同时打开多个文件 vim fl1 fl2 已经打开一个文件时，再打开一个:sp flname 多个编辑文件之间切换:ctrl+w 不关闭文件，临时切换回命</description>
    </item>
    
    <item>
      <title>vim命令记录</title>
      <link>https://polariseye.github.io/ubuntu/vim/</link>
      <pubDate>Sat, 12 Aug 2017 10:31:55 +0000</pubDate>
      
      <guid>https://polariseye.github.io/ubuntu/vim/</guid>
      <description>vim命令记录 光标控制 移动到第一行第一个字符:gg 移动到文件尾:G 移动到当前行的行尾:$ 移动到当前行的行首:0,|均可 ^:移动到行首打首字母</description>
    </item>
    
    <item>
      <title>unicode相关详解</title>
      <link>https://polariseye.github.io/ubuntu/jobmanage/</link>
      <pubDate>Thu, 03 Aug 2017 11:13:55 +0000</pubDate>
      
      <guid>https://polariseye.github.io/ubuntu/jobmanage/</guid>
      <description>ubuntu 在用命令整理 控制台管理 当前所有任务查看 jobs -l 让任务到后台执行 command+&amp;amp; 比如：./start.sh&amp;amp; 切换正在运行的程序到后台 如果程序正在前台运</description>
    </item>
    
    <item>
      <title></title>
      <link>https://polariseye.github.io/ubuntu/sysmanage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://polariseye.github.io/ubuntu/sysmanage/</guid>
      <description>系统管理 环境变量配置 环境变量配置均使用export 要设置打环境变量
使修改立即生效：source 配置文件名
系统环境配置 /etc/profile: 每个用户第一次登录时，执行
/etc/bashrc: 为每一个运行bash shell打用户执行此文件，在bash shell被打开时，执行
用户环境配置 ~/.bash_profile: 每个用户都可使用该文件输入专用于自己使用的shell信息, 当用户登录时,该文件仅仅执行一次! 默认情况下,他设置一些环境变量,执行用户的.bashrc文件.
~/.bashrc: 该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该文件被读取.
~/.bash_logout:用户登出时，执行此文件
软件管理  下载安装软件 apt-get install &amp;lt;软件名&amp;gt; 更新软件源列表 apt-get update 更新所有软件 apt-get dist-upgrade 删除软件和配置文件 apt-get &amp;ndash;purge remove &amp;lt;软件名&amp;gt; 如果，要保留配置文件，则不需要&amp;ndash;purge  进程管理 进程后台运行的几种方式  命令行后面加&amp;rdquo;&amp;amp;&amp;rdquo;  比如: &amp;ldquo;rm -rf &amp;amp;&amp;ldquo;，作用是把当前任务放置在后台执行，可以使用命令&amp;rdquo;jobs&amp;rdquo;进行查看
 格式：(命令 &amp;amp;)  新开一个shell执行作业，所提交的作业并不在作业列表中，是无法通过jobs来查看的
 格式：nohup 命令&amp;amp;  忽略hangup信号，防止shell关闭时程序停掉
 格式：setsid 命令  脱离当前shell的进程关系,放置在后台执行。
 格式：disown -h job名  使某个正在运行打作业忽略HUP信号</description>
    </item>
    
    <item>
      <title></title>
      <link>https://polariseye.github.io/ubuntu/vim_go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://polariseye.github.io/ubuntu/vim_go/</guid>
      <description>vim搭建go打开发环境 安装go打vim插件，具体步骤如下：
 安装vim插件管理工具 安装go的vim插件 安装相关具体插件  安装vim插件管理工具 网上有很多vim插件管理工具，由于第一个接触到的是Vundle，所以我选则安装Vundle
git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim  完成后，调整vim配置：修改~/.vim/.vimrc (如果不存在此文件，则创建)，具体增加以下内容：
&amp;quot; ------------- &amp;quot; Vundle &amp;quot; https://github.com/gmarik/Vundle.vim &amp;quot; ------------- set nocompatible &amp;quot; be iMproved, required filetype off &amp;quot; required &amp;quot; set the runtime path to include Vundle and initialize set rtp+=~/.vim/bundle/Vundle.vim call vundle#begin() &amp;quot; alternatively, pass a path where Vundle should install plugins &amp;quot;call vundle#begin(&#39;~/some/path/here&#39;) &amp;quot; let Vundle manage Vundle, required Plugin &#39;gmarik/Vundle.vim&#39; &amp;quot; The following are examples of different formats supported.</description>
    </item>
    
  </channel>
</rss>